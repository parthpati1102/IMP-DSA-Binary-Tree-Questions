class Solution {
  public:
    vector<int> bottomView(Node *root) {
        // code here
        map<int , int> mp;
        
        queue<pair<Node* , int>> qu;
        
        qu.push({root , 0});
        
        while(!qu.empty()){
           int level = qu.front().second;
           Node * newNode = qu.front().first;
           
           qu.pop();
           
           mp[level] = newNode -> data;
           
           if(newNode -> left != NULL){
               qu.push({newNode -> left , level - 1});
           }
           
           if(newNode -> right != NULL){
               qu.push({newNode -> right , level + 1});
           }
        }
        
        vector<int> ans;
        
        for(auto pr : mp){
            ans.push_back(pr.second);
        }
        
        return ans;
    }
};
