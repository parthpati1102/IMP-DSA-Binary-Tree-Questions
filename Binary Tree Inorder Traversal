//Using Recursion
class Solution {
    private:
    void Solve(TreeNode* root,vector<int> &vec){
        if(root==NULL){
            return;
        }

        Solve(root->left,vec);

        vec.push_back(root->val);

        Solve(root->right,vec);
    }
public:
    vector<int> inorderTraversal(TreeNode* root) {
         vector<int> vec;
         Solve(root,vec);
         return vec;
    }
};

//Iterative approach using Stack
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> inorder;
        stack<TreeNode *> st;
        TreeNode * node = root;

        while(true){
             if(node != NULL){
                 st.push(node);
                 node = node -> left;
             }

             else{

                if(st.empty()) break;

                node = st.top();
                st.pop();
                inorder.push_back(node -> val);
                node = node -> right;
             }
        }

        return inorder;
    }
};
